CREATE OR REPLACE PROCEDURE `vz-it-np-gudv-dev-dtwndo-0.aid_nwperf_aether_core_tbls.aether_amf_performance_sptest`(process_ts STRING, trans_ts STRING, window_hour INT64, window_interval INT64)
OPTIONS (strict_mode=false)
BEGIN
 
merge into `vz-it-np-gudv-dev-dtwndo-0.aid_nwperf_aether_core_tbls.aether_amf_performance_counttest` tgt
using (
SELECT
      event_time,
      "ericsson" AS vendor,
      fqdn, 
      KEY AS metric_name,
      SAFE_CAST(increase_value AS BIGNUMERIC) AS metric_increase_value,
      SAFE_CAST(sum_value AS BIGNUMERIC) AS metric_sum_value,
      trans_dt,
      DATETIME(process_ts) AS schedule_time,
      CURRENT_TIMESTAMP() AS updated_timestamp,
      datapoints_count AS datapoints_count,
	  region as region,
	  territory as territory,
	  market as market
    FROM (
      
      WITH event_timestamps AS (
        SELECT DISTINCT
          DATETIME_TRUNC(TIMESTAMP(`timestamp`), HOUR) AS trans_hr
        FROM
             `vz-it-pr-i37v-ndldo-0.vzn_ndl_aether_core_tbls_rd_v.ericsson_cnf_amf_raw_v1`
        WHERE
          DATETIME_TRUNC(TIMESTAMP(insert_date_utc), HOUR) IN UNNEST(
            GENERATE_TIMESTAMP_ARRAY(
              TIMESTAMP_SUB(DATETIME_TRUNC(TIMESTAMP(trans_ts), HOUR), INTERVAL window_interval - 1 HOUR),
              DATETIME_TRUNC(TIMESTAMP(trans_ts), HOUR),
              INTERVAL window_hour HOUR
            )
          )
          AND trans_dt IS NOT NULL
      ),
     
      base_data AS (
        SELECT
          *,
          MD5(labels) AS checksum
        FROM (
          SELECT DISTINCT
            TIMESTAMP_SECONDS(
              CAST(FLOOR(UNIX_SECONDS(`timestamp`) / (window_hour * 60 * 60)) * (window_hour * 60 * 60) AS INT64)
            ) AS event_time,
            fqdn,
            TO_JSON_STRING(JSON_REMOVE(SAFE.PARSE_JSON(labels), '$.__name__', '$.jobid', '$.localdn')) AS labels,
            JSON_VALUE(labels, '$.instance') AS instance,
            LOWER(name) AS KEY,
            SAFE_CAST(NULLIF(value, 'NaN') AS FLOAT64) AS value,
            DATE(`timestamp`) AS trans_dt,
            `timestamp`
          FROM
               `vz-it-pr-i37v-ndldo-0.vzn_ndl_aether_core_tbls_rd_v.ericsson_cnf_amf_raw_v1`
          WHERE
            DATETIME_TRUNC(TIMESTAMP(`timestamp`), HOUR) IN (SELECT trans_hr FROM event_timestamps)
            AND insert_date_utc > (SELECT MIN(trans_hr) FROM event_timestamps)
            AND trans_dt IN (SELECT DATE(trans_hr) FROM event_timestamps)
            AND trans_dt IS NOT NULL
        )
      ),
     
      window_data AS (
        SELECT
          *,
          IF(value < prev_value, 1, 0) AS has_reset
        FROM (
          SELECT
            trans_dt,
            event_time,
            fqdn,
            labels,
            checksum,
            instance,
            KEY,
            value,
            `timestamp`,
            SAFE_CAST(
              LAG(value) OVER (
                PARTITION BY fqdn, checksum, instance, KEY, DATETIME_TRUNC(`timestamp`, HOUR)
                ORDER BY `timestamp`
              ) AS FLOAT64
            ) AS prev_value
          FROM
            base_data
        )
      ),
      reset_adjusted AS (
        SELECT
          event_time,
          fqdn,
          instance,
          trans_dt,
          MAX(labels) AS labels,
          checksum,
          KEY,
          SUM(value) AS sum_value,
          SUM(
            CASE
              WHEN prev_value IS NULL THEN 0
              WHEN has_reset = 1 THEN value
              ELSE value - IFNULL(prev_value, 0)
            END
          ) AS increase_value,
          COUNT(*) AS datapoints_count 
        FROM
          window_data
        GROUP BY
          trans_dt,
          event_time,
          instance,
          fqdn,
          checksum,
          KEY
      ),
	  region_mapping as (
	  SELECT *,
	  CASE
         WHEN SUBSTRING(fqdn, 1, 8) IN ('chrxnclh', 'clmascmv', 'gnbqnc1', 'gnvlscmz', 'grnrncjb', 'knvntn76', 'nchrscpl', 'rlghncor', 'whcktn04') THEN 'cartn'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('schztxce', 'elsstx13', 'shptlawr', 'lbcntxap') THEN 'ctx'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('jcvoflxz', 'jptrflgn', 'orlhfl01', 'pmbrfltf', 'ptcyflbk') THEN 'fl'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('alprgagq', 'brhoaltb', 'dlthgagq', 'macngayq') THEN 'gaal'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('bltnmn86','desmiaie','fargndgv','glvymnnv','omalnexu','owtnmncc','sxflsdtu') THEN 'gp'
	WHEN SUBSTRING(fqdn, 1, 8) IN ('btrhlagr','cvtnlago','hsnotx08','pnscfl35') THEN 'hgc'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('applwiee','elgnil32','hchlilmt','mshwinbw','nwblwicz','rcfrilaj','spfdilup') THEN 'ilwi'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('chndinaa','ipltinqy','ipluinxi','lsvlkywx','cttpmibg','rylomicb','sfldmilr','sflemifx') THEN 'mik'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('crdlil13','drdnmoad','lenykscj','mnrgksab','spfdmokc','stlsmoyq') THEN 'ksmo'
	WHEN SUBSTRING(fqdn, 1, 8) IN ('aurscoty','boitidhj','enwdcoff','hlnamthu','krnsutaf','wjrdut30','wmnscows') THEN 'mtn'
    WHEN SUBSTRING(fqdn, 1, 8) IN ( 'blrcmagf','hkstnhec','tntnmado','wlfrctai','wndsctwl','wrxbmawa','wsbomagj') THEN 'ne'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('frdlnyek','minlnyac','nycqnyws','wnyknybc','ynkrnyzl','bbtpnj06','bbtpnjda','jrcynj10','waynnjah','wltpnj22') THEN 'nym'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('bkffcask','frfecabb','pltncaay','rcklcaig','sktncafv','snvacanx') THEN 'nca'
	WHEN SUBSTRING(fqdn, 1, 8) IN ('akrooh20','clmbohiq','cncqoh22','gahgohbt','lwctoh02','mntpohae','bgvlpaam','jhtwpadp','scviohag','sftppabq') THEN 'opw'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('ancsak08','eugnorbp','hlboor38','milnhi04','rdmewa22','spknwaqr','sttlwazu','tacmwa43') THEN 'pnw'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('pttnpadd','pxtgpacr','bflonyro','esyrnyen','hnrtnycr','ngrnnyal') THEN 'upny'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('artntnbi','ltroartb','tulyok13') THEN 'soc'
	WHEN SUBSTRING(fqdn, 1, 8) IN ('azusca21','lsancapb','lsaocagx','ontrcaoy','snancapc','vistca65') THEN 'sca'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('albqnmmf','elpstxwr','glbrazab','nlvgnvoq','phnxazcr','tcsnaz75','temqazkw') THEN 'sw'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('ewtppaaa','mpshnj57','nwcsdebg','phlapamp','wmtppaaa') THEN 'tristate'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('nwnwva83','rcmdva83','rcmdvapl','ronkvalv') THEN 'sova'
	WHEN SUBSTRING(fqdn, 1, 8) IN ('adlpmdmt','anjtmdah','chntvaav','phnxmdaa','slbrmdaz','wdlwmdem') THEN 'wb'
    WHEN SUBSTRING(fqdn, 1, 8) IN ('welktx','rchltx') THEN 'abc'
    ELSE 'unknown'
      END AS region
	  FROM reset_adjusted),
	  Market_mapping AS(
	  SELECT *, CASE
    WHEN SUBSTRING(region, 1, 3) IN ('ne','nym','tristate','upny','wb') THEN 'ne'
    WHEN SUBSTRING(region, 1, 3) IN ('mik','opw','ilwi') THEN 'gl'
    WHEN SUBSTRING(region, 1, 3) IN ('cartn','fl','gaal','sova') THEN 'se'
    WHEN SUBSTRING(region, 1, 3) IN ('gp|ksmo') THEN 'nc'
    WHEN SUBSTRING(region, 1, 3) IN ('ctx','hgc','soc','sw') THEN 'sc'
	WHEN SUBSTRING(region, 1, 3) IN ('mtn','nca','pnw','sca') THEN 'pac'
	      ELSE 'unknown'
      END AS Market
	  FROM region_mapping
	  ),
	  territory_mapping AS (
	  SELECT *,
    CASE
    WHEN SUBSTRING(fqdn, 1, 3) IN ('mik','opw','ne','nym','tristate','upny','wb','cartn','fl','gaal','sova') THEN 'east'
    WHEN SUBSTRING(region, 1, 3) IN ('ilwi','gp','ksmo','mtn','nca','pnw','sca','ctx','hgc','soc','sw') THEN 'east'
    ELSE 'unknown'
      END AS territory
	  FROM Market_mapping)
	  
      SELECT
        event_time,
        fqdn,
        trans_dt,
        KEY,
        SUM(increase_value) AS increase_value,
        SUM(sum_value) AS sum_value,
        -- COUNT(fqdn) AS datapoints_count -- count of FQDN's
  SUM(datapoints_count) AS datapoints_count
      FROM
        reset_adjusted
      GROUP BY
        trans_dt,
        event_time,
        fqdn,
        KEY
      ORDER BY
        trans_dt,
        event_time,
        fqdn,
        KEY
    )
  ) src
  ON tgt.trans_dt = src.trans_dt
    AND tgt.event_time = src.event_time
    AND tgt.fqdn = src.fqdn
    AND tgt.metric_name = src.metric_name
    AND tgt.vendor = src.vendor
    AND tgt.trans_dt IS NOT NULL
  WHEN MATCHED THEN
  UPDATE SET
    tgt.metric_increase_value = src.metric_increase_value,
    tgt.metric_sum_value = src.metric_sum_value,
    tgt.schedule_time = src.schedule_time,
    tgt.updated_timestamp = src.updated_timestamp,
    tgt.datapoints_count = src.datapoints_count,
    tgt.region = src.region ,
	tgt.territory = src.territory ,
	tgt.market = src.market 
  WHEN NOT MATCHED THEN
  INSERT (
    event_time,
    vendor,
    fqdn,
    metric_name,
    metric_increase_value,
    metric_sum_value,
    trans_dt,
    schedule_time,
    updated_timestamp,
    datapoints_count,
    region,
	territory,
	market
  )
  VALUES (
    src.event_time,
    src.vendor,
    src.fqdn,
    src.metric_name,
    src.metric_increase_value,
    src.metric_sum_value,
    src.trans_dt,
    src.schedule_time,
    src.updated_timestamp,
    src.datapoints_count,
    src.region,
	src.territory,
	src.market
	
  );


END;
